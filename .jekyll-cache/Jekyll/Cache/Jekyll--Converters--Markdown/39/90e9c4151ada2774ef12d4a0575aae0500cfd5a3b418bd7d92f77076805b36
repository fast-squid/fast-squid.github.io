I"$<h1 id="proslam-이란">ProSLAM 이란?</h1>
<p><strong>ProSLAM</strong>은 Programmers SLAM 으로 기존의 ORB, LSD 슬램이 복잡하기 때문에 이를 해결하기 위해 주요 기능들을 모듈화한 슬램입니다. ProSLAM은 C++로 작성된 오픈소스가 공개 처음 SLAM을 시작하기에 좋지않을까 해서 paper를 읽고 구현해보자..! 라고 마음먹었습니다. 하지만 코드를 보니 바닥부터 시작하는 저로선 이해하기 쉽지 않더라고요… 비전, 선형대수 등 기반 지식이 필요해 ProSLAM을 직접 구현하는 것은 긴 여정이 될것 같습니다. 그럼 시작해보죠.</p>

<hr />
<h2 id="keypoint특징점">Keypoint(특징점)</h2>
<p>영상의 <strong>특징점</strong>이란 영상에서 물체를 인식하거나, 영상과 영상을 매칭할때 용이하도록 찾는 <strong>keypoint</strong>입니다.<br />
<img src="/img/posts/keypoint.png" alt="Keypoints in image" /><br />
특징점은 물체의 이동이나 스케일 변화, 시점에 영향을 적게 받아야합니다
영상에서 이런 특징을 갖는 점은 <strong>corner point</strong>입니다.
따라서 <strong>keypoint</strong>를 찾는다는것은 곧 코너를 찾는다고 생각하시면 됩니다.</p>

<h2 id="keypoint-extraction특징점-추출">Keypoint Extraction(특징점 추출)</h2>
<p>비전수업을 수강하고 졸지 않으셨다면 영상의 특징점을 뽑는 여러 방식들을 알고계실수 있습니다. 대표적으로 Harris, SIFT, FAST, AGAST 등등 여러 방식이 있지만
ProSLAM 맞춤형으로 FAST와 BRIEF만 빠르게 알아보도록 합시다.</p>

<h3 id="fastfeatures-from-accelerated-segment-test">FAST(Features from Accelerated Segment Test)</h3>
<p><strong>FAST</strong>는 <a href="https://www.edwardrosten.com/work/rosten_2006_machine.pdf">ECCV 2006</a> 에서 발표된 방식입니다. FAST는 그 이름처럼 기존 방법들보다 빠르지만 그보다 대단한 것은, 특징점 검출 품질에 있어서도 기존 방식들을 넘어선다고 합니다.
// 그림</p>

<p><strong>FAST</strong> 의 기본 원리는 생각보다 단순합니다. 임의의 점 p가 코너인지 아닌지를 판단하기 위해 p를 중심으로 원을 그린뒤, 해당 원 위의 픽셀이 n개 이상 연속해서 밝거나 어두우면 p를 코너라고 판단합니다.</p>

<p><strong>FAST</strong> 알고리즘은 p 주변의 원위 픽셀을 직접 탐색하는 대신 decision tree를 이용한다고 합니다. 다만 이 decision tree에 대해선 자세히 다루지 않도록 하겠습니다. 왜냐..? openCV가 해결해줄거니까요…! 자세한 구현 방식보다 더 중요한 것은 FAST의 문제점입니다. 임의의 점 p가 코너점으로 판단되었을 때 p 와 인접한 점들이 코너점으로 검출되기 쉽다고 합니다. 그리서 <strong>NMS</strong>를 사용한다고 하네요. Detection 할때 여러개의 박스가 1개의 object에 겹쳐있을 때 1개의 box를 남기고 제거하는 것과 같은 프로세스를 진행하는 것 같네요.</p>

<hr />
<h2 id="descriptor특징량">Descriptor(특징량)</h2>
<p>ProSLAM의 코드를 보다보면 <strong>descriptor</strong>라는것이 있는데 저는 비전 베이스가 전혀 없어서 keypoint와 어떤 차이인지 혼동이 오더라구요. <strong>Keypoint</strong>는 코너점이기 때문에 말그대로 영상내의 좌표(x,y)입니다. <strong>Descriptor</strong>는 해당 keypoint 로부터 뽑아낸 정보(gradient, 히스토그램 등)을 의미합니다. 따라서 descriptor를 얻기 위해선 keypoint를 먼저 찾아야합니다. ProSLAM의 경우 Keypoint를 FAST로, Descriptor를 BRIEF로 추출합니다.</p>

<h3 id="briefbinary-robust-independent-elementary-features">BRIEF(Binary Robust Independent Elementary Features)</h3>
<p><strong>BRIEF</strong>는keypoint 주변의 픽셀들의 쌍에 대해 픽셀 값 비교를 통해 0, 1 값으로.
예를 들어 그림과같이 keypoint p주변에 a,b,c 들에 대해 \(\tau\)값을 구하면
110_(2)를 얻을 수 있습니다. 110은 b가a보다, c가 b보다 밝고 a가 c보다 어둡다라는 정보를 뜻합니다.
BRIEF는 이런 방식으로 keypoint 주변정보를 binary형태로 추출합니다.
자세한 구현방법은 넘어가겠습니다. 저희에겐 openCV가 있으니까요!</p>

:ET